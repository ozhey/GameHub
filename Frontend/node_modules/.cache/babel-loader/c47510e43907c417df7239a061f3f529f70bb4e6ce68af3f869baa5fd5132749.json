{"ast":null,"code":"var _jsxFileName = \"/Users/ozheymann/Documents/University/Java Workshop/Project/Frontend/src/components/snake/Snake.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { getClientAndConnect } from \"../../websocket/Websocket\";\nimport Rooms from \"../common/Rooms\";\nimport WebsocketStatus from \"../common/WebsocketStatus\";\nimport Board from \"./Board\";\nimport './Snake.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Snake = () => {\n  _s();\n  const wsRef = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [error, setError] = useState(null);\n  const [roomId, setRoomId] = useState(0);\n  useEffect(() => {\n    wsRef.current = getClientAndConnect(setIsConnected, setError);\n    return () => wsRef.current.disconnect();\n  }, []);\n  let body = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 16\n  }, this);\n  if (isConnected && roomId === 0) {\n    body = /*#__PURE__*/_jsxDEV(Rooms, {\n      setRoomNum: setRoomId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  } else if (isConnected && roomId > 0) {\n    body = /*#__PURE__*/_jsxDEV(Board, {\n      wsRef: wsRef,\n      roomId: roomId,\n      setRoomId: setRoomId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  } else {\n    body = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Connecting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [body, /*#__PURE__*/_jsxDEV(WebsocketStatus, {\n      isConnected: isConnected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Snake, \"eam1UXSodx9keUJxY3/TDlpQI6Y=\");\n_c = Snake;\nexport default Snake;\nvar _c;\n$RefreshReg$(_c, \"Snake\");","map":{"version":3,"names":["React","useEffect","useRef","useState","getClientAndConnect","Rooms","WebsocketStatus","Board","jsxDEV","_jsxDEV","Fragment","_Fragment","Snake","_s","wsRef","isConnected","setIsConnected","error","setError","roomId","setRoomId","current","disconnect","body","children","fileName","_jsxFileName","lineNumber","columnNumber","setRoomNum","_c","$RefreshReg$"],"sources":["/Users/ozheymann/Documents/University/Java Workshop/Project/Frontend/src/components/snake/Snake.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { getClientAndConnect } from \"../../websocket/Websocket\";\nimport Rooms from \"../common/Rooms\";\nimport WebsocketStatus from \"../common/WebsocketStatus\";\nimport Board from \"./Board\";\nimport './Snake.css';\n\nconst Snake = () => {\n    const wsRef = useRef(null);\n    const [isConnected, setIsConnected] = useState(false);\n    const [error, setError] = useState(null);\n    const [roomId, setRoomId] = useState(0);\n\n    useEffect(() => {\n        wsRef.current = (getClientAndConnect(setIsConnected, setError));\n        return () => wsRef.current.disconnect();\n    }, []);\n\n    let body = <div>Error...</div>\n\n    if (isConnected && roomId === 0) {\n        body = <Rooms setRoomNum={setRoomId} />\n    } else if (isConnected && roomId > 0) {\n        body = <Board wsRef={wsRef} roomId={roomId} setRoomId={setRoomId} />\n    } else {\n        body = <div>Connecting...</div>\n    }\n\n    return <>\n        {body}\n        <WebsocketStatus isConnected={isConnected} />\n    </>\n\n}\n\nexport default Snake;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,mBAAmB,QAAQ,2BAA2B;AAC/D,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,KAAK,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC1B,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAEvCF,SAAS,CAAC,MAAM;IACZa,KAAK,CAACO,OAAO,GAAIjB,mBAAmB,CAACY,cAAc,EAAEE,QAAQ,CAAE;IAC/D,OAAO,MAAMJ,KAAK,CAACO,OAAO,CAACC,UAAU,EAAE;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIC,IAAI,gBAAGd,OAAA;IAAAe,QAAA,EAAK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;EAE9B,IAAIb,WAAW,IAAII,MAAM,KAAK,CAAC,EAAE;IAC7BI,IAAI,gBAAGd,OAAA,CAACJ,KAAK;MAACwB,UAAU,EAAET;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAC3C,CAAC,MAAM,IAAIb,WAAW,IAAII,MAAM,GAAG,CAAC,EAAE;IAClCI,IAAI,gBAAGd,OAAA,CAACF,KAAK;MAACO,KAAK,EAAEA,KAAM;MAACK,MAAM,EAAEA,MAAO;MAACC,SAAS,EAAEA;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACxE,CAAC,MAAM;IACHL,IAAI,gBAAGd,OAAA;MAAAe,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EACnC;EAEA,oBAAOnB,OAAA,CAAAE,SAAA;IAAAa,QAAA,GACFD,IAAI,eACLd,OAAA,CAACH,eAAe;MAACS,WAAW,EAAEA;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBAC9C;AAEP,CAAC;AAAAf,EAAA,CA1BKD,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AA4BX,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}