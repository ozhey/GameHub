{"ast":null,"code":"var _jsxFileName = \"/Users/ozheymann/Documents/University/Java Workshop/Project/Frontend/src/components/snake/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport Scores from \"./Scores\";\nimport { useWindowDimensions } from \"../../hooks/CustomHooks\";\nimport { getClientAndConnect } from \"../../websocket/Websocket\";\nimport Rooms from \"../common/Rooms\";\nimport WebsocketStatus from \"../common/WebsocketStatus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_WINDOW_WIDTH = 600; //The true maximum width is around 80% of the const value\n\nconst Board = _ref => {\n  _s();\n  let {\n    wsRef,\n    roomNum,\n    setRoomNum\n  } = _ref;\n  const canvasRef = useRef(null);\n  const subRef = useRef(null);\n  const [gameState, setGameState] = useState(null);\n  const [canvas, setCanvas] = useState({\n    width: 480,\n    height: 480,\n    color: \"oldlace\",\n    scale: 20\n  });\n  const [winner, setWinner] = useState();\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  let gameResult;\n  const onMessage = payloadString => {\n    console.log(payloadString);\n    let payload = JSON.parse(payloadString.body);\n  };\n  const handleKeyDown = e => {\n    if (e.preventDefault && (e.code === 'ArrowUp' || e.code === 'ArrowDown' || e.code === 'ArrowLeft' || e.code === 'ArrowRight')) {\n      e.preventDefault();\n    }\n    wsRef.current.send(`/app/snake_room/${roomNum}`, {}, e.code);\n  };\n  const initBlankCanvas = useCallback(() => {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.fillStyle = canvas.color;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    return context;\n  }, [canvas]);\n  useEffect(() => {\n    subRef.current = wsRef.current.subscribe(`/topic/snake_room/${roomNum}`, onMessage);\n    wsRef.current.send(`/app/snake_room/${roomNum}`, {}, \"Enter room\");\n    return () => subRef.current.unsubscribe();\n  }, []);\n  useEffect(() => {\n    setCanvas(prevCanvas => {\n      const maxWidth = Math.min(width, MAX_WINDOW_WIDTH);\n      const multiplier = prevCanvas.width / maxWidth;\n      return {\n        width: maxWidth * 0.8,\n        height: prevCanvas.height / multiplier * 0.8,\n        color: prevCanvas.color,\n        scale: prevCanvas.scale / multiplier * 0.8\n      };\n    });\n  }, [width, height]);\n  useEffect(() => {\n    const context = initBlankCanvas();\n    context.setTransform(canvas.scale, 0, 0, canvas.scale, 0, 0);\n  }, [canvas, initBlankCanvas]);\n  useEffect(() => {\n    if (gameState) {\n      const {\n        snakes,\n        apple\n      } = gameState;\n      const context = initBlankCanvas();\n      Object.values(snakes).forEach(snake => {\n        context.fillStyle = snake.color;\n        snake.body.forEach(segment => context.fillRect(segment.x, segment.y, 1, 1));\n      });\n      context.fillStyle = 'red';\n      context.beginPath();\n      context.arc(apple.x + 0.5, apple.y + 0.575, 0.425, 0, 2 * Math.PI);\n      context.closePath();\n      context.fill();\n      context.fillStyle = 'green';\n      context.fillRect(apple.x + 0.5, apple.y, 0.3, 0.15);\n    }\n  }, [gameState, canvas, initBlankCanvas]);\n  if (winner === 'Tie') {\n    gameResult = /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-shadow\",\n      children: \"The game ended with a tie!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 22\n    }, this);\n  } else if (winner) {\n    gameResult = /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-shadow\",\n      children: [\"The last survivor is \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: winner\n        },\n        children: winner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 71\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 22\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"snake-game\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      role: \"button\",\n      tabIndex: \"0\",\n      onKeyDown: handleKeyDown,\n      className: \"snake-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: '10px 0px -15px'\n        },\n        className: \"text-shadow\",\n        children: [\"Your color is \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 96\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        style: {\n          display: 'block'\n        },\n        className: \"snake-canvas\",\n        ref: canvasRef,\n        width: `${canvas.width}px`,\n        height: `${canvas.height}px`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => wsRef.current.send(`/app/snake_room/${roomNum}`, {}, \"start\"),\n          className: \"button-red\",\n          children: \"Start game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setRoomNum(0) // go back to rooms page\n          ,\n          className: \"button-red\",\n          children: \"Back to menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), gameResult, /*#__PURE__*/_jsxDEV(Scores, {\n        gameState: gameState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"ZwpQ4aFuXUEcChNITUhxu6pqsZ0=\", false, function () {\n  return [useWindowDimensions];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","Scores","useWindowDimensions","getClientAndConnect","Rooms","WebsocketStatus","jsxDEV","_jsxDEV","MAX_WINDOW_WIDTH","Board","_ref","_s","wsRef","roomNum","setRoomNum","canvasRef","subRef","gameState","setGameState","canvas","setCanvas","width","height","color","scale","winner","setWinner","gameResult","onMessage","payloadString","console","log","payload","JSON","parse","body","handleKeyDown","e","preventDefault","code","current","send","initBlankCanvas","context","getContext","fillStyle","fillRect","subscribe","unsubscribe","prevCanvas","maxWidth","Math","min","multiplier","setTransform","snakes","apple","Object","values","forEach","snake","segment","x","y","beginPath","arc","PI","closePath","fill","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","role","tabIndex","onKeyDown","margin","display","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/ozheymann/Documents/University/Java Workshop/Project/Frontend/src/components/snake/Board.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport Scores from \"./Scores\";\nimport { useWindowDimensions } from \"../../hooks/CustomHooks\";\nimport { getClientAndConnect } from \"../../websocket/Websocket\";\nimport Rooms from \"../common/Rooms\";\nimport WebsocketStatus from \"../common/WebsocketStatus\";\nconst MAX_WINDOW_WIDTH = 600; //The true maximum width is around 80% of the const value\n\nconst Board = ({ wsRef, roomNum, setRoomNum }) => {\n    const canvasRef = useRef(null);\n    const subRef = useRef(null);\n    const [gameState, setGameState] = useState(null);\n    const [canvas, setCanvas] = useState({ width: 480, height: 480, color: \"oldlace\", scale: 20 })\n    const [winner, setWinner] = useState();\n    const { height, width } = useWindowDimensions();\n    let gameResult;\n\n    const onMessage = (payloadString) => {\n        console.log(payloadString);\n        let payload = JSON.parse(payloadString.body);\n    }\n\n    const handleKeyDown = (e) => {\n        if (e.preventDefault && (e.code === 'ArrowUp' || e.code === 'ArrowDown' || e.code === 'ArrowLeft' || e.code === 'ArrowRight')) {\n            e.preventDefault();\n        }\n        wsRef.current.send(`/app/snake_room/${roomNum}`, {}, e.code)\n\n    }\n\n    const initBlankCanvas = useCallback(\n        () => {\n            const context = canvasRef.current.getContext(\"2d\");\n            context.fillStyle = canvas.color;\n            context.fillRect(0, 0, canvas.width, canvas.height);\n            return context;\n        },\n        [canvas],\n    );\n\n    useEffect(() => {\n        subRef.current = wsRef.current.subscribe(`/topic/snake_room/${roomNum}`, onMessage)\n        wsRef.current.send(`/app/snake_room/${roomNum}`, {}, \"Enter room\")\n        return () => subRef.current.unsubscribe();\n    }, []);\n\n    useEffect(() => {\n        setCanvas(prevCanvas => {\n            const maxWidth = Math.min(width, MAX_WINDOW_WIDTH);\n            const multiplier = prevCanvas.width / maxWidth;\n            return {\n                width: maxWidth * 0.8,\n                height: prevCanvas.height / multiplier * 0.8,\n                color: prevCanvas.color,\n                scale: prevCanvas.scale / multiplier * 0.8\n            }\n        })\n    }, [width, height])\n\n    useEffect(() => {\n        const context = initBlankCanvas();\n        context.setTransform(canvas.scale, 0, 0, canvas.scale, 0, 0);\n    }, [canvas, initBlankCanvas])\n\n    useEffect(() => {\n        if (gameState) {\n            const { snakes, apple } = gameState;\n            const context = initBlankCanvas();\n            Object.values(snakes).forEach(snake => {\n                context.fillStyle = snake.color;\n                snake.body.forEach((segment) => context.fillRect(segment.x, segment.y, 1, 1))\n            })\n            context.fillStyle = 'red';\n            context.beginPath();\n            context.arc(apple.x + 0.5, apple.y + 0.575, 0.425, 0, 2 * Math.PI);\n            context.closePath();\n            context.fill();\n            context.fillStyle = 'green';\n            context.fillRect(apple.x + 0.5, apple.y, 0.3, 0.15);\n        }\n    }, [gameState, canvas, initBlankCanvas])\n\n\n    if (winner === 'Tie') {\n        gameResult = <h2 className='text-shadow'>The game ended with a tie!</h2>\n    } else if (winner) {\n        gameResult = <h2 className='text-shadow'>The last survivor is <span style={{ color: winner }}>{winner}</span></h2>\n    }\n\n    return (\n        <div className='snake-game'>\n            <div role=\"button\" tabIndex=\"0\" onKeyDown={handleKeyDown} className='snake-container'>\n                <h2 style={{ margin: '10px 0px -15px' }} className='text-shadow'>Your color is <span style={{ color: 'red' }}>red</span></h2>\n                <canvas style={{ display: 'block' }}\n                    className='snake-canvas'\n                    ref={canvasRef}\n                    width={`${canvas.width}px`}\n                    height={`${canvas.height}px`}\n                />\n                <div className='options'>\n                    <button\n                        onClick={() => wsRef.current.send(`/app/snake_room/${roomNum}`, {}, \"start\")}\n                        className='button-red'>Start game\n                    </button>\n                    <button\n                        onClick={() => setRoomNum(0)} // go back to rooms page\n                        className='button-red'>Back to menu\n                    </button>\n                </div>\n                {gameResult}\n                <Scores gameState={gameState} />\n            </div>\n        </div>\n    )\n\n}\n\nexport default Board;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}