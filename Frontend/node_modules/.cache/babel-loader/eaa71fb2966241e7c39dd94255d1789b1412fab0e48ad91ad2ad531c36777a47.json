{"ast":null,"code":"var _jsxFileName = \"/Users/ozheymann/Documents/University/Java Workshop/Project/Frontend/src/components/snake/Snake.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getClientAndConnect } from \"../../websocket/Websocket\";\nimport Rooms from \"../common/Rooms\";\nimport WebsocketStatus from \"../common/WebsocketStatus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Snake = () => {\n  _s();\n  const [wsClient, setWsClient] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setWsClient(getClientAndConnect(setIsConnected, setError));\n    return () => {\n      console.log(wsClient);\n      if (wsClient !== null) {\n        wsClient.disconnect(() => console.log(\"disconnected\"));\n      }\n    };\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  } else if (isConnected) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Rooms, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => wsClient.send(\"/app/hello\", {}, \"hello!\"),\n        children: \"Send message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(WebsocketStatus, {\n        isConnected: isConnected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Connecting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n};\n_s(Snake, \"V6lCztSYcA4d6PZbGH8kfZYWyjw=\");\n_c = Snake;\nexport default Snake;\nvar _c;\n$RefreshReg$(_c, \"Snake\");","map":{"version":3,"names":["React","useEffect","useState","getClientAndConnect","Rooms","WebsocketStatus","jsxDEV","_jsxDEV","Fragment","_Fragment","Snake","_s","wsClient","setWsClient","isConnected","setIsConnected","error","setError","console","log","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","send","_c","$RefreshReg$"],"sources":["/Users/ozheymann/Documents/University/Java Workshop/Project/Frontend/src/components/snake/Snake.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getClientAndConnect } from \"../../websocket/Websocket\";\nimport Rooms from \"../common/Rooms\";\nimport WebsocketStatus from \"../common/WebsocketStatus\";\n\nconst Snake = () => {\n    const [wsClient, setWsClient] = useState(null);\n    const [isConnected, setIsConnected] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setWsClient(getClientAndConnect(setIsConnected, setError));\n        return () => {\n            console.log(wsClient   );\n            if (wsClient !== null) {\n                wsClient.disconnect(() => console.log(\"disconnected\"));\n            }\n        }\n    }, []);\n\n    if (error) {\n        return <div>Error...</div>\n    } else if (isConnected) {\n        return <>\n            <Rooms />\n            <button onClick={() => wsClient.send(\"/app/hello\", {}, \"hello!\")}>\n                Send message\n            </button>\n            <WebsocketStatus isConnected={isConnected}/>\n        </>\n    } else {\n        return <div>Connecting...</div>\n    }\n\n\n\n}\n\nexport default Snake;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,mBAAmB,QAAQ,2BAA2B;AAC/D,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZY,WAAW,CAACV,mBAAmB,CAACY,cAAc,EAAEE,QAAQ,CAAC,CAAC;IAC1D,OAAO,MAAM;MACTC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAI;MACxB,IAAIA,QAAQ,KAAK,IAAI,EAAE;QACnBA,QAAQ,CAACQ,UAAU,CAAC,MAAMF,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,CAAC;MAC1D;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIH,KAAK,EAAE;IACP,oBAAOT,OAAA;MAAAc,QAAA,EAAK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EAC9B,CAAC,MAAM,IAAIX,WAAW,EAAE;IACpB,oBAAOP,OAAA,CAAAE,SAAA;MAAAY,QAAA,gBACHd,OAAA,CAACH,KAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACTlB,OAAA;QAAQmB,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAACe,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAE;QAAAN,QAAA,EAAC;MAElE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACTlB,OAAA,CAACF,eAAe;QAACS,WAAW,EAAEA;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA,gBAC7C;EACP,CAAC,MAAM;IACH,oBAAOlB,OAAA;MAAAc,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EACnC;AAIJ,CAAC;AAAAd,EAAA,CA/BKD,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}