{"ast":null,"code":"var _jsxFileName = \"/Users/ozheymann/Documents/University/Java Workshop/Project/Frontend/src/components/snake/Snake.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { getClientAndConnect } from \"../../websocket/Websocket\";\nimport Rooms from \"../common/Rooms\";\nimport WebsocketStatus from \"../common/WebsocketStatus\";\nimport Board from \"./Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Snake = () => {\n  _s();\n  const wsClient = useRef(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [error, setError] = useState(null);\n  const [room, setRoom] = useState(0);\n  useEffect(() => {\n    wsClient.current = getClientAndConnect(setIsConnected, setError);\n    return () => wsClient.current.disconnect();\n  }, []);\n  const body = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 18\n  }, this);\n  if (isConnected && room === 0) {\n    body = /*#__PURE__*/_jsxDEV(Rooms, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  } else if (isConnected && room > 0) {\n    body = /*#__PURE__*/_jsxDEV(Board, {\n      wsClient: wsClient,\n      roomNum: roomNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  } else {\n    body = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Connecting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [body, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => wsClient.current.send(\"/app/hello\", {}, \"hello!\"),\n      children: \"Send message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(WebsocketStatus, {\n      isConnected: isConnected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Snake, \"zP3qCsBMu8vaQqwKG5A2j6B/dj8=\");\n_c = Snake;\nexport default Snake;\nvar _c;\n$RefreshReg$(_c, \"Snake\");","map":{"version":3,"names":["React","useEffect","useRef","useState","getClientAndConnect","Rooms","WebsocketStatus","Board","jsxDEV","_jsxDEV","Fragment","_Fragment","Snake","_s","wsClient","isConnected","setIsConnected","error","setError","room","setRoom","current","disconnect","body","children","fileName","_jsxFileName","lineNumber","columnNumber","roomNum","onClick","send","_c","$RefreshReg$"],"sources":["/Users/ozheymann/Documents/University/Java Workshop/Project/Frontend/src/components/snake/Snake.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { getClientAndConnect } from \"../../websocket/Websocket\";\nimport Rooms from \"../common/Rooms\";\nimport WebsocketStatus from \"../common/WebsocketStatus\";\nimport Board from \"./Board\";\n\nconst Snake = () => {\n    const wsClient = useRef(null);\n    const [isConnected, setIsConnected] = useState(false);\n    const [error, setError] = useState(null);\n    const [room, setRoom] = useState(0);\n\n    useEffect(() => {\n        wsClient.current = (getClientAndConnect(setIsConnected, setError));\n        return () => wsClient.current.disconnect();\n    }, []);\n\n    const body = <div>Error...</div>\n\n    if (isConnected && room === 0) {\n        body = <Rooms />\n    } else if (isConnected && room > 0) {\n        body = <Board wsClient={wsClient} roomNum={roomNum} />\n    } else {\n        body = <div>Connecting...</div>\n    }\n\n    return <>\n        {body}\n        <button onClick={() => wsClient.current.send(\"/app/hello\", {}, \"hello!\")}>\n            Send message\n        </button>\n        <WebsocketStatus isConnected={isConnected} />\n    </>\n\n\n\n}\n\nexport default Snake;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,mBAAmB,QAAQ,2BAA2B;AAC/D,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AACvD,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAEnCF,SAAS,CAAC,MAAM;IACZa,QAAQ,CAACO,OAAO,GAAIjB,mBAAmB,CAACY,cAAc,EAAEE,QAAQ,CAAE;IAClE,OAAO,MAAMJ,QAAQ,CAACO,OAAO,CAACC,UAAU,EAAE;EAC9C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,IAAI,gBAAGd,OAAA;IAAAe,QAAA,EAAK;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;EAEhC,IAAIb,WAAW,IAAII,IAAI,KAAK,CAAC,EAAE;IAC3BI,IAAI,gBAAGd,OAAA,CAACJ,KAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EACpB,CAAC,MAAM,IAAIb,WAAW,IAAII,IAAI,GAAG,CAAC,EAAE;IAChCI,IAAI,gBAAGd,OAAA,CAACF,KAAK;MAACO,QAAQ,EAAEA,QAAS;MAACe,OAAO,EAAEA;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAC1D,CAAC,MAAM;IACHL,IAAI,gBAAGd,OAAA;MAAAe,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM;EACnC;EAEA,oBAAOnB,OAAA,CAAAE,SAAA;IAAAa,QAAA,GACFD,IAAI,eACLd,OAAA;MAAQqB,OAAO,EAAEA,CAAA,KAAMhB,QAAQ,CAACO,OAAO,CAACU,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,EAAE,QAAQ,CAAE;MAAAP,QAAA,EAAC;IAE1E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACTnB,OAAA,CAACH,eAAe;MAACS,WAAW,EAAEA;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBAC9C;AAIP,CAAC;AAAAf,EAAA,CA/BKD,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}