{"ast":null,"code":"import { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nconst getClientAndConnect = (setIsConnected, setError) => {\n  let Sock = new SockJS('http://localhost:8080/ws');\n  let stompClient = over(Sock);\n  stompClient.connect({}, () => setIsConnected(true), err => setError(String(err)));\n  stompClient.ws.onclose = () => {\n    setIsConnected(false);\n  };\n  return stompClient;\n};\nexport { getClientAndConnect };","map":{"version":3,"names":["over","SockJS","getClientAndConnect","setIsConnected","setError","Sock","stompClient","connect","err","String","ws","onclose"],"sources":["/Users/ozheymann/Documents/University/Java Workshop/Project/Frontend/src/websocket/Websocket.js"],"sourcesContent":["import { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\n\nconst getClientAndConnect = (setIsConnected, setError) => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    let stompClient = over(Sock);\n    stompClient.connect({}, () => setIsConnected(true), (err) => setError(String(err)));\n    stompClient.ws.onclose = () => {\n        setIsConnected(false)\n    };\n    return stompClient;\n}\n\nexport { getClientAndConnect };"],"mappings":"AAAA,SAASA,IAAI,QAAQ,SAAS;AAC9B,OAAOC,MAAM,MAAM,eAAe;AAElC,MAAMC,mBAAmB,GAAGA,CAACC,cAAc,EAAEC,QAAQ,KAAK;EACtD,IAAIC,IAAI,GAAG,IAAIJ,MAAM,CAAC,0BAA0B,CAAC;EACjD,IAAIK,WAAW,GAAGN,IAAI,CAACK,IAAI,CAAC;EAC5BC,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAMJ,cAAc,CAAC,IAAI,CAAC,EAAGK,GAAG,IAAKJ,QAAQ,CAACK,MAAM,CAACD,GAAG,CAAC,CAAC,CAAC;EACnFF,WAAW,CAACI,EAAE,CAACC,OAAO,GAAG,MAAM;IAC3BR,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EACD,OAAOG,WAAW;AACtB,CAAC;AAED,SAASJ,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}