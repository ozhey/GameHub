{"ast":null,"code":"var _jsxFileName = \"/Users/ozheymann/Documents/University/Java Workshop/JPA playground/Spring Websocket/Frontend/websocket-test/src/components/Socket.js\";\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst Socket = () => {\n  const connect = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient = over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const onConnected = () => {\n    stompClient.subscribe('/topic/greetings', onMessageReceived);\n    var chatMessage = {\n      name: \"test\"\n    };\n    stompClient.send(\"/app/hello\", {}, JSON.stringify(chatMessage));\n  };\n  const onMessageReceived = payload => {\n    console.log(payload);\n  };\n  const onError = err => {\n    console.log(err);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: connect,\n    children: \"connect\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_c = Socket;\nexport default Socket;\nvar _c;\n$RefreshReg$(_c, \"Socket\");","map":{"version":3,"names":["over","SockJS","jsxDEV","_jsxDEV","stompClient","Socket","connect","Sock","onConnected","onError","subscribe","onMessageReceived","chatMessage","name","send","JSON","stringify","payload","console","log","err","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ozheymann/Documents/University/Java Workshop/JPA playground/Spring Websocket/Frontend/websocket-test/src/components/Socket.js"],"sourcesContent":["import { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\n\nvar stompClient =null;\n\nconst Socket = () => {\n\n    const connect = () => {\n        let Sock = new SockJS('http://localhost:8080/ws');\n        stompClient = over(Sock);\n        stompClient.connect({}, onConnected, onError);\n    }\n\n    const onConnected = () => {\n        stompClient.subscribe('/topic/greetings', onMessageReceived);\n        var chatMessage = {\n            name: \"test\"\n        };\n        stompClient.send(\"/app/hello\", {}, JSON.stringify(chatMessage));\n    }\n\n    const onMessageReceived = (payload) => {\n        console.log(payload);\n    }\n\n    const onError = (err) => {\n        console.log(err);\n\n    }\n\n    return (\n        <button onClick={connect}>\n            connect\n        </button>\n    );\n\n}\n\nexport default Socket;"],"mappings":";AAAA,SAASA,IAAI,QAAQ,SAAS;AAC9B,OAAOC,MAAM,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,IAAIC,WAAW,GAAE,IAAI;AAErB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAEjB,MAAMC,OAAO,GAAGA,CAAA,KAAM;IAClB,IAAIC,IAAI,GAAG,IAAIN,MAAM,CAAC,0BAA0B,CAAC;IACjDG,WAAW,GAAGJ,IAAI,CAACO,IAAI,CAAC;IACxBH,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC,EAAEE,WAAW,EAAEC,OAAO,CAAC;EACjD,CAAC;EAED,MAAMD,WAAW,GAAGA,CAAA,KAAM;IACtBJ,WAAW,CAACM,SAAS,CAAC,kBAAkB,EAAEC,iBAAiB,CAAC;IAC5D,IAAIC,WAAW,GAAG;MACdC,IAAI,EAAE;IACV,CAAC;IACDT,WAAW,CAACU,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW,CAAC,CAAC;EACnE,CAAC;EAED,MAAMD,iBAAiB,GAAIM,OAAO,IAAK;IACnCC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACxB,CAAC;EAED,MAAMR,OAAO,GAAIW,GAAG,IAAK;IACrBF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;EAEpB,CAAC;EAED,oBACIjB,OAAA;IAAQkB,OAAO,EAAEf,OAAQ;IAAAgB,QAAA,EAAC;EAE1B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAS;AAGjB,CAAC;AAAAC,EAAA,GA/BKtB,MAAM;AAiCZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}